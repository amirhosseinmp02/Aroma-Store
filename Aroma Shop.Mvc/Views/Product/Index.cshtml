@using Aroma_Shop.Application.Interfaces
@using Aroma_Shop.Domain.Models.FileModels

@model Aroma_Shop.Application.ViewModels.Product.ProductsViewModel

@{
    ViewData["Title"] = "محصولات";
}

@inject IAccountService AccountService
@inject IProductService ProductService

@section Styles
{
    <link rel="stylesheet" type="text/css" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/themes/smoothness/jquery-ui.css">
    <style>

        span:focus {
            box-shadow: none;
            outline: none;
        }

        .value {
            position: absolute;
            top: 30px;
            left: 50%;
            margin: 0 0 0 -20px;
            width: 40px;
            text-align: center;
            display: block;
            /* optional */
            font-weight: normal;
            font-family: 'Samim', sans-serif;
            font-size: 14px;
            color: #333;
        }

        .price-range-both.value {
            width: 100px;
            margin: 0 0 0 -50px;
            top: 26px;
        }

        .price-range-both {
            display: none;
        }

        .value i {
            font-style: normal;
        }

        .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default {
            border-radius: 13px;
            background: rgb(56, 74, 235) !important
        }
    </style>
}

<!-- ================ start banner area ================= -->
<section class="blog-banner-area" id="contact">
    <div class="container h-100">
        <div class="blog-banner">
            <div class="text-center">
                <h1>محصولات</h1>
                <nav aria-label="breadcrumb" class="banner-breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a class="text-dark" asp-controller="Home" asp-action="Index">خانه</a></li>
                        <li class="breadcrumb-item active" aria-current="page">محصولات</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</section>
<!-- ================ end banner area ================= -->
<!-- ================ category section start ================= -->
<section class="section-margin--small mb-5">
    <div class="container">
        <form asp-action="Index" method="get">
            <div class="row">
                <div class="col-xl-3 col-lg-4 col-md-5">
                    <div class="sidebar-categories">
                        <div class="head">دسته بندی ها</div>
                        <ul class="main-categories">
                            <li class="common-filter">
                                <ul>
                                    @foreach (var category in Model.Categories)
                                    {
                                        var categoryProductsCount =
                                            category.Products.Count;

                                        <li class="filter-list"><input class="pixel-radio" type="checkbox" id="@category.CategoryName" name="categories" value="@category.CategoryId"><label class="ml-2" for="@category.CategoryName">@category.CategoryName<span> (@categoryProductsCount)</span></label></li>
                                    }
                                </ul>
                            </li>
                            <li class="border-top form-group mt-3">
                                <label class="control-label mb-3">قیمت</label>
                                <div id="slider" class="form-control"></div>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-xl-9 col-lg-8 col-md-7">
                    <!-- Start Filter Bar -->
                    <div class="filter-bar d-flex flex-wrap align-items-center">
                        <div class="mr-auto mt-3 mb-2">
                            <select class="form-control" name="sortby">
                                <option value="newest">مرتب سازی بر اساس جدیدترین</option>
                                <option value="popularity">مرتب سازی بر اساس محبوبیت</option>
                                <option value="priceCheapest">مرتب سازی بر اساس ارزانترین</option>
                                <option value="priceMostExpensive">مرتب سازی بر اساس گرانترین</option>
                            </select>
                        </div>
                        <div>
                            <div class="input-group filter-bar-search">
                                <input type="text" placeholder="جستجو..." class="pl-2" name="search" value="@ViewBag.search">
                                <div class="input-group-append">
                                    <button type="submit"><i class="ti-search"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End Filter Bar -->
                    <!-- Start Best Seller -->
                    <section class="lattest-product-area pb-40 category-list">
                        <div class="row">
                            @foreach (var product in @Model.Products)
                            {
                                string productImagePath;
                                if (product.Images.Any())
                                {
                                    productImagePath = $"/img/{product.Images.FirstOrDefault().ImagePath}";
                                }
                                else
                                {
                                    productImagePath = Image.DefaultImagePath;
                                }
                                <div class="col">
                                    <div class="card text-center card-product">
                                        <div class="card-product__img">
                                            <img class="card-img product-images-card" src="@productImagePath" alt="">
                                            <ul class="card-product__imgOverlay">
                                                <li><a asp-controller="Product" asp-action="ProductDetails" asp-route-productId="@product.ProductId"><i class="bi bi-search"></i></a></li>
                                                <li><button><i class="bi bi-bag"></i></button></li>
                                                @if (AccountService.IsUserSignedIn())
                                                {
                                                    if (!await ProductService.IsProductInLoggedUserFavoriteProducts(product.ProductId))
                                                    {
                                                        <li><a asp-controller="Product" asp-action="AddProductToUserFavoriteProducts" asp-route-favoriteProductId="@product.ProductId"><i class="ti-heart"></i></a></li>
                                                    }
                                                    else
                                                    {
                                                        <li><a asp-controller="Product" asp-action="RemoveProductFromUserFavoriteProducts" asp-route-favoriteProductId="@product.ProductId"><i class="bi bi-heart-fill"></i></a></li>
                                                    }
                                                }
                                            </ul>
                                        </div>
                                        <div class="card-body">
                                            <p>@(product.Categories.Count>0? product.Categories.First().CategoryName:"")</p>
                                            <h4 class="card-product__title"><a asp-controller="Product" asp-action="ProductDetails" asp-route-productId="@product.ProductId">@product.ProductName</a></h4>

                                            @if (product.IsSimpleProduct)
                                            {
                                                var simpleProductPriceLabel = "";

                                                if (product.ProductPrice != 0 && product.ProductQuantityInStock != 0)
                                                {
                                                    simpleProductPriceLabel = $"{product.ProductPrice} تومان";

                                                }
                                                else if (product.ProductPrice == 0 && product.ProductQuantityInStock > 0)
                                                {
                                                    simpleProductPriceLabel = "رایگان";
                                                }
                                                else
                                                {
                                                    simpleProductPriceLabel = "";
                                                }

                                                <p class="card-product__price">@simpleProductPriceLabel</p>
                                            }
                                            else
                                            {
                                                var productAttributePriceLabel = "";

                                                var doesProductHaveAFreeVariation =
                                                    product
                                                        .MixedProductAttributes
                                                        .Any(p => p.MixedProductAttributePrice == 0 && p.MixedProductAttributeQuantityInStock > 0);

                                                double? minimumPrice =
                                                    product
                                                        .MixedProductAttributes
                                                        .Where(p => p.MixedProductAttributeQuantityInStock != 0 && p.MixedProductAttributePrice != 0)
                                                        .Min(p => (double?)p.MixedProductAttributePrice);

                                                double? maximumPrice =
                                                    product
                                                        .MixedProductAttributes
                                                        .Where(p => p.MixedProductAttributeQuantityInStock != 0 && p.MixedProductAttributePrice != 0)
                                                        .Max(p => (double?)p.MixedProductAttributePrice);

                                                if ((minimumPrice != null && maximumPrice != null) && minimumPrice != maximumPrice && !doesProductHaveAFreeVariation)
                                                {
                                                    productAttributePriceLabel = $"{minimumPrice} تومان - {maximumPrice} تومان";
                                                }
                                                else if ((minimumPrice != null && maximumPrice != null) && minimumPrice == maximumPrice && !doesProductHaveAFreeVariation)
                                                {
                                                    productAttributePriceLabel = $"{minimumPrice} تومان";
                                                }
                                                else if (minimumPrice == null && doesProductHaveAFreeVariation)
                                                {
                                                    productAttributePriceLabel = $"رایگان";
                                                }
                                                else if (maximumPrice != null && doesProductHaveAFreeVariation)
                                                {
                                                    productAttributePriceLabel = $"رایگان - {maximumPrice} تومان";
                                                }

                                                <p class="card-product__price">@productAttributePriceLabel</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </section>
                    @await Html.PartialAsync("PartialPaging", "Index");
                    <!-- End Best Seller -->
                </div>
            </div>
        </form>
    </div>
</section>
<!-- ================ category section end ================= -->

@section Scripts
{
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js"></script>
    <script>
        function collision($div1, $div2) {
            var x1 = $div1.offset().left;
            var w1 = 40;
            var r1 = x1 + w1;
            var x2 = $div2.offset().left;
            var w2 = 40;
            var r2 = x2 + w2;

            if (r1 < x2 || x1 > r2) return false;
            return true;

        }


        $('#slider').slider({
            range: true,
            min: 0,
            max: 27000,
            values: [1000, 7000],
            slide: function (event, ui) {

                $('.ui-slider-handle:eq(0) .price-range-min').html(ui.values[0] + 'تومان');
                $('.ui-slider-handle:eq(1) .price-range-max').html(ui.values[1] + 'تومان');
                $('.price-range-both').html('<i>' + ui.values[0] + 'تومان - </i>' + ui.values[1] + 'تومان');

                ConvertNumberToPersion();


                if (ui.values[0] == ui.values[1]) {
                    $('.price-range-both i').css('display', 'none');
                } else {
                    $('.price-range-both i').css('display', 'inline');
                }



                if (collision($('.price-range-min'), $('.price-range-max')) == true) {
                    $('.price-range-min, .price-range-max').css('opacity', '0');
                    $('.price-range-both').css('display', 'block');
                } else {
                    $('.price-range-min, .price-range-max').css('opacity', '1');
                    $('.price-range-both').css('display', 'none');
                }

            }
        });

        $('.ui-slider-range').append('<span class="price-range-both value"><i> تومان' + $('#slider').slider('values', 0) + ' - </i>' + $('#slider').slider('values', 1) + '</span>');

        $('.ui-slider-handle:eq(0)').append('<span class="price-range-min value">' + $('#slider').slider('values', 0) + 'تومان</span>');

        $('.ui-slider-handle:eq(1)').append('<span class="price-range-max value">' + $('#slider').slider('values', 1) + 'تومان</span>');
    </script>
}
